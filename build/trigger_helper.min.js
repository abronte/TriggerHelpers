!function(){var Logger,Request,isTrigger,root,_base,_ref,_ref1,_ref2;root=null!=(_ref=(_base="undefined"!=typeof exports&&null!==exports?exports:window).forge)?_ref:_base.forge={},isTrigger=void 0!==window.forge,root.isTrigger=function(){return isTrigger},Logger=function(){function Logger(){var level,methodName,name,_ref1;this.logLevel=5;for(name in LEVELS)_ref1=LEVELS[name],level=_ref1.level,methodName=_ref1.methodName,this[name]=function(msg){return this.logLevel>=level?console[null!=methodName?methodName:name]("["+name.toUpperCase()+"] "+msg):void 0}}var LEVELS;return LEVELS={critical:{level:1,methodName:"error"},error:{level:2},info:{level:3},warning:{level:4,methodName:"info"},debug:{level:5}},Logger.prototype.level=function(level){return void 0!==level&&(this.logLevel=level),this.logLevel},Logger}(),null==(_ref1=root.log)&&(root.log=new Logger),Request=function(){function Request(){}return Request.prototype.get=function(url,callback){return $.ajax({type:"GET",url:url,dataType:"jsonp",processData:!1,success:callback})},Request.prototype.ajax=function(params){return $.ajax(params)},Request}(),null==(_ref2=root.request)&&(root.request=new Request)}.call(this);