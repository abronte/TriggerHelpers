// Generated by CoffeeScript 1.6.2
(function() {
  var Logger, Request, isTrigger, root, _base, _ref, _ref1, _ref2;

  root = (_ref = (_base = typeof exports !== "undefined" && exports !== null ? exports : window).forge) != null ? _ref : _base.forge = {};

  isTrigger = window.forge !== void 0;

  root.isTrigger = function() {
    return isTrigger;
  };

  Logger = (function() {
    var LEVELS;

    LEVELS = {
      critical: {
        level: 1,
        methodName: "error"
      },
      error: {
        level: 2
      },
      info: {
        level: 3
      },
      warning: {
        level: 4,
        methodName: "info"
      },
      debug: {
        level: 5
      }
    };

    function Logger() {
      var level, methodName, name, _ref1;

      this.logLevel = 5;
      for (name in LEVELS) {
        _ref1 = LEVELS[name], level = _ref1.level, methodName = _ref1.methodName;
        this[name] = function(msg) {
          if (this.logLevel >= level) {
            return console[methodName != null ? methodName : name]("[" + name.toUpperCase() + "] " + msg);
          }
        };
      }
    }

    Logger.prototype.level = function(level) {
      if (level !== void 0) {
        this.logLevel = level;
      }
      return this.logLevel;
    };

    return Logger;

  })();

  if ((_ref1 = root.log) == null) {
    root.log = new Logger;
  }

  Request = (function() {
    function Request() {}

    Request.prototype.get = function(url, callback) {
      return $.ajax({
        type: "GET",
        url: url,
        dataType: "jsonp",
        processData: false,
        success: callback
      });
    };

    Request.prototype.ajax = function(params) {
      return $.ajax(params);
    };

    return Request;

  })();

  if ((_ref2 = root.request) == null) {
    root.request = new Request;
  }

}).call(this);
